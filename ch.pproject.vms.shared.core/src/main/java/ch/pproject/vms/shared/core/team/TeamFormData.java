package ch.pproject.vms.shared.core.team;

import javax.annotation.Generated;

import org.eclipse.scout.rt.platform.classid.ClassId;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@ClassId("4780f797-ec46-4dcf-bfd9-771e381bcb72-formdata")
@Generated(value = "ch.pproject.vms.client.core.team.TeamForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TeamFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public LicenceType getLicenceType() {
    return getFieldByClass(LicenceType.class);
  }

  public MembersTable getMembersTable() {
    return getFieldByClass(MembersTable.class);
  }

  public Name getName() {
    return getFieldByClass(Name.class);
  }

  /**
   * access method for property TeamNr.
   */
  public Long getTeamNr() {
    return getTeamNrProperty().getValue();
  }

  /**
   * access method for property TeamNr.
   */
  public void setTeamNr(Long teamNr) {
    getTeamNrProperty().setValue(teamNr);
  }

  public TeamNrProperty getTeamNrProperty() {
    return getPropertyByClass(TeamNrProperty.class);
  }

  @ClassId("244021bc-d154-4885-b365-bf740d2a587e-formdata")
  public static class LicenceType extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;
  }

  @ClassId("bb640ae4-91e3-49c4-b240-54a39ede8379-formdata")
  public static class MembersTable extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    @Override
    public MembersTableRowData addRow() {
      return (MembersTableRowData) super.addRow();
    }

    @Override
    public MembersTableRowData addRow(int rowState) {
      return (MembersTableRowData) super.addRow(rowState);
    }

    @Override
    public MembersTableRowData createRow() {
      return new MembersTableRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return MembersTableRowData.class;
    }

    @Override
    public MembersTableRowData[] getRows() {
      return (MembersTableRowData[]) super.getRows();
    }

    @Override
    public MembersTableRowData rowAt(int index) {
      return (MembersTableRowData) super.rowAt(index);
    }

    public void setRows(MembersTableRowData[] rows) {
      super.setRows(rows);
    }

    public static class MembersTableRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String person = "person";
      public static final String shirtNumber = "shirtNumber";
      private Long m_person;
      private String m_shirtNumber;

      public Long getPerson() {
        return m_person;
      }

      public void setPerson(Long newPerson) {
        m_person = newPerson;
      }

      public String getShirtNumber() {
        return m_shirtNumber;
      }

      public void setShirtNumber(String newShirtNumber) {
        m_shirtNumber = newShirtNumber;
      }
    }
  }

  @ClassId("a8fb1193-474a-4388-95d8-4290292e03ea-formdata")
  public static class Name extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;
  }

  public static class TeamNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;
  }
}
